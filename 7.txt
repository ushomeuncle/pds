Chat server application with multiple clients.

#include <stdio.h>
#include <string.h>
#include <mpi.h>
int main(int argc, char *argv[])
{
int rank, size;
char message[100];
MPI_Init(&argc, &argv);
MPI_Comm_rank(MPI_COMM_WORLD, &rank);
MPI_Comm_size(MPI_COMM_WORLD, &size);
if (size != 2)
{
printf("This program requires exactly two processes. Terminating.\n");
MPI_Finalize();
return 1;
}
do
{
if (rank == 0)
{
// Process 0 (server) sends a message
printf("Message for process 0: ");
scanf("%s", message);
MPI_Send(message, strlen(message) + 1, MPI_CHAR, 1, 0, MPI_COMM_WORLD);
printf("Server sent: %s\n", message);
}
else
{
// Process 1 (client) receives a message
printf("Message for process 1: ");
scanf("%s", message);
MPI_Recv(message, sizeof(message), MPI_CHAR, 0, 0, MPI_COMM_WORLD,
MPI_STATUS_IGNORE);
printf("Client received: %s\n", message);
}
} while (strcmp(message, "bye") != 0);
// Finalize MPI
MPI_Finalize();
return 0;
}
